string Solution::simplifyPath(string a) {
    int n = a.size();
    stack<char> s;
    for(int i=0;i<n;i++)
    {
        if(s.empty())
        {
        s.push(a[i]);
        continue;
         }
        if(!s.empty() &&  a[i] == '/' && s.top() == '/')
        {
            continue;
        }
        else if(!s.empty() && a[i] == '.' && s.top() == '/')
        {
            if( i+1<n && a[i+1] == '.')
            {
                s.pop();
                i++;
                while(!s.empty() && s.top() != '/')
                {
                    s.pop();
                }
            }
            else
            {
                if(!s.empty())
                s.pop();
            }
        }
        else
        {
            s.push(a[i]);
        }
    }
    if(!s.empty() && s.top() == '/')
    {
        s.pop();
    }
    string ans = "";
    if(s.empty())
    s.push('/');
    while(!s.empty())
    {
        ans += s.top();
        s.pop();
    }
    reverse(ans.begin(),ans.end());
    return ans;
}

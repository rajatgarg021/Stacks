#include<tuple>
vector<int> Solution::solve(vector<vector<int> > &a) {
    int count = 0;
    int n = a.size();
    priority_queue<pair<int, pair<int, int>>> pq;
    vector<int> v(n, -1);
    map<int, int> mp;
    
    for(int i=0;i<n;i++)
    {
        if(a[i][0] == 1)
        {
            mp[a[i][1]]++;
            // count++;
            pq.push({mp[a[i][1]], { count++, a[i][1]}});
        }
        else if(a[i][0] == 2)
        {
            pair<int, pair<int, int>> t = pq.top();
            pq.pop();
            int val = t.second.second;
            mp[val]--;
            v[i] = val;
        }
    }
    return v;
}

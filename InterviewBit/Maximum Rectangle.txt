int nse(vector<int> &a)
{
    int n = a.size();
    vector<int> ans1(n, -1);
    stack<int> s;
    vector<int> ans2(n, n);
    
    for(int i=0;i<n;i++)
    {
        while(!s.empty() && a[s.top()] >= a[i])
        {
            s.pop();
        }
        if(!s.empty())
        {
            ans1[i] = s.top();
        }
        s.push(i);
    }
    while(!s.empty())
    {
        s.pop();
    }
    for(int i=n-1;i>=0;i--)
    {
        while(!s.empty() && a[s.top()] >= a[i])
        {
            s.pop();
        }
        if(!s.empty())
        {
            ans2[i] = s.top();
        }
        s.push(i);
    }
    int val  = 0;
    for(int i=0;i<n;i++)
    {
        val = max(val, (ans2[i]-ans1[i]-1)*a[i]);
    }
    return val;
}
    
int Solution::solve(vector<vector<int> > &a) {
    int n = a.size();
    int m = a[0].size();
    for (int j = 0; j < m; j++) 
    { 
        for (int i = 1; i < n; i++) 
        {
            if (a[i][j] == 0)
                continue;
            
            a[i][j] += a[i - 1][j];
        }
      
    } 
    int mxm = 0;
    for(int i=0;i<n;i++)
    {
        mxm = max(mxm, nse(a[i]));
    }
    return mxm;
    
}
